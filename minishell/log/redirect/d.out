SRC_DIR="./src"
LOG_DIR="log"
PROG="./minishell"
LEAKS_CHECK=true
if [ $(uname) = "Linux" ]; then
	LEAKS_CMD="valgrind"
	LEAKS_CMD+=" --leak-check=full"
	LEAKS_CMD+=" --track-fds=yes"
	LEAKS_CMD+=" --show-leak-kinds=all"
	LEAKS_CMD+=" --track-origins=yes"
	LEAKS_CMD+=" --log-file=log/leaks.log"
	#LEAKS_CMD+=" --trace-children=yes"
	LEAKS_CMD="leaks -quiet --atExit --"
	LEAKS_CMD=""
	STATE_A=""
	PROG_PID=""
	TEST_DIR="test"
	if [[ $2 != "" ]] ; then
		TEST_DIR=$2
		STATE_B=$(get_state)
		if [[ $STATE_A != $STATE_B ]]; then
			STATE_A=$STATE_B
				if [[ $1 != "" ]] ; then
						if [[ $TEST_FILE = *_* ]] ; then
	local TEST_FILE=$1
	local COMMAND="$PROG $TEST_FILE"
		COMMAND="$LEAKS_CMD $COMMAND"
	local TEST_NAME="$(basename $TEST_FILE .sh)"
	local LOG_FILE="$LOG_DIR/$TEST_NAME/mini.log"
	local LOG_FILE_ERR="$LOG_DIR/$TEST_NAME/mini_error.log"
	TEST_FILE=$1
	LOG_FILE_MINI=$2
	LOG_FILE_MINI_ERR=$3
	local TEST_NAME="$(basename $TEST_FILE .sh)"
	local LOG_FILE="$LOG_DIR/$TEST_NAME/bash.log"
	local LOG_FILE_ERR="$LOG_DIR/$TEST_NAME/bash_error.log"
	local DIFF_FILE="$LOG_DIR/$TEST_NAME/diff.diff"
	local DIFF_FILE_ERR="$LOG_DIR/$TEST_NAME/diff_error.diff"
	local DIFF=$(diff -U 1 $LOG_FILE $LOG_FILE_MINI)
	local DIFF_ERR=$(diff -U 1 $LOG_FILE_ERR $LOG_FILE_MINI_ERR)
	if [[ $DIFF == "" ]] ; then
	if [[ $DIFF_ERR == "" ]] ; then
	if [[ $(uname) == "Linux" ]];  then
		MD5="md5sum"
		MD5="md5"
	SRC_STATE=$(find -L $SRC_DIR -type f -name "*.[ch]" -exec $MD5 {} \;)
	TEST_STATE=$(find -L ./test -type f -name "*.sh" -exec $MD5 {} \;)
	SOURCES=$(ls $SRC_DIR/*.c $SRC_DIR/**/*.c | sed "s;$SRC_DIR/;;g" | tr '\n' ' ')
	SED_COMMAND="s;^SOURCES	.*;SOURCES			=	$SOURCES;"
	if [ $(uname) = "Linux" ];  then
	NORM_ERROR=$(sed -e '/.*: OK!/d' <(norminette $1))
	if [[ $NORM_ERROR == "" ]] ; then
		AWK_SCRIPT='{
			if ($2 == "Error!") {
				filename = $1;
			} else if (filename != "./src/debug.h:") {
				for(i = 7; i <= NF; i++) {
	LEAKS_DETECTED=$(cat ./log/leaks.log | grep "ERROR SUMMARY" | awk '{printf "%s", $4}' | tr -d "0")
	if [[ $LEAKS_DETECTED == "" ]] ; then
